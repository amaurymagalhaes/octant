variables:
  DOCKER_DRIVER: overlay2
  FF_USE_FASTZIP: "true"
  CACHE_COMPRESSION_LEVEL: "fast"

stages:
  - build
  - lint_and_typecheck
  - test
  - deploy

image: node:16-bullseye-slim

.rules:
  on_mr:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  on_push_to_default_branch:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.scripts:
  install_packages:
    - apt update && apt install -y --no-install-recommends git ca-certificates
  install_libpq5:
    - apt update && apt install -y --no-install-recommends libpq5
  yarn_install:
    - yarn install --cache-folder .yarn --non-interactive --frozen-lockfile

Build contracts:
  stage: build
  rules:
    - !reference [.rules, on_mr ]
    - !reference [.rules, on_push_to_default_branch ]
  script:
    - !reference [.scripts, install_packages]
    - ci/build_root.sh
    - ci/build_contracts.sh
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
    - key: $CI_COMMIT_REF_SLUG-yarn-contracts
      paths:
        - contracts/.yarn
        - contracts/node_modules
  artifacts:
    name: contracts
    paths:
      - contracts/artifacts
      - contracts/typechain
    expire_in: 30 days

Build services:
  stage: build
  parallel:
    matrix:
      - SERVICE:
          - client
          - coin-prices-server
          - subgraph
  rules:
    - !reference [.rules, on_mr ]
    - !reference [.rules, on_push_to_default_branch ]
  dependencies:
    - Build contracts
  needs:
    - Build contracts
  script:
    - !reference [.scripts, install_packages]
    - ci/build_$SERVICE.sh
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-yarn-$SERVICE
      paths:
        - $SERVICE/.yarn
        - $SERVICE/node-modules

Lint and typecheck:
  stage: lint_and_typecheck
  parallel:
    matrix:
      - SERVICE:
          - contracts
          - client
          - coin-prices-server
          - subgraph
  rules:
    - !reference [.rules, on_mr ]
    - !reference [.rules, on_push_to_default_branch ]
  script:
    - cd $SERVICE
    - !reference [ .scripts, yarn_install ]
    - yarn eslint
    - yarn type-check
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-yarn-$SERVICE
      paths:
        - $SERVICE/.yarn
        - $SERVICE/node-modules
      policy: pull

Unit tests:
  stage: test
  parallel:
    matrix:
      - SERVICE:
          - contracts
          - client
          - coin-prices-server
          - subgraph
  rules:
    - !reference [.rules, on_mr ]
    - !reference [.rules, on_push_to_default_branch ]
  dependencies:
    - Build contracts
  script:
    - cd $SERVICE
    - !reference [ .scripts, install_libpq5 ]
    - !reference [ .scripts, yarn_install ]
    - yarn test
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-yarn-$SERVICE
      paths:
        - $SERVICE/.yarn
        - $SERVICE/node-modules
      policy: pull

Documentation:
  stage: test
  parallel:
    matrix:
      - SERVICE:
          - contracts
  rules:
    - !reference [.rules, on_mr ]
    - !reference [.rules, on_push_to_default_branch ]
  dependencies:
    - Build contracts
  script:
    - cd $SERVICE
    - !reference [ .scripts, yarn_install ]
    - yarn docs
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-yarn-$SERVICE
      paths:
        - $SERVICE/.yarn
        - $SERVICE/node-modules
      policy: pull
  artifacts:
    name: $SERVICE_docs
    paths:
      - $SERVICE/.docs/
    expire_in: 30 days

# TODO To be removed (mslomnicki)

Contracts deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  cache:
    - key: $CI_COMMIT_REF_SLUG-yarn-root
      paths:
        - node_modules
        - .yarn
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-yarn-$SERVICE
      paths:
        - $SERVICE/.yarn
        - $SERVICE/node-modules
      policy: pull
  script:
    - cd contracts
    - yarn deploy:goerli

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  script:
    - apt-get update && apt-get install -y --no-install-recommends git --reinstall ca-certificates
    - cd contracts
    - yarn install --non-interactive --cache-folder .yarn
    - yarn compile
    - cd client
    - yarn install --non-interactive
    - yarn build
    - cd ..
    - mv client/dist public
  artifacts:
    paths:
      - public
